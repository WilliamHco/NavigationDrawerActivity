plugins {
	id "com.github.dcendents.android-maven" version "1.4"
	id "com.jfrog.bintray" version "1.5"
}

apply plugin: 'com.android.library'

android {
	compileSdkVersion 24
	buildToolsVersion "24.0.0"

	defaultConfig {
		minSdkVersion 14
		targetSdkVersion 24
		versionCode 1
		versionName "1.0.0"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile 'com.android.support:appcompat-v7:24.0.0'
	compile 'com.android.support:design:24.0.0'
}

group = 'com.cacaorick'
version = '1.0.0'
def siteUrl = 'https://github.com/CacaoRick/NavigationDrawerActivity'
def gitUrl = 'https://github.com/CacaoRick/NavigationDrawerActivity.git'
def desc = 'Easy to use same NavigationDrawer, ToolBar and FloatingActionButton in Activity.'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def bontrayUser = properties.getProperty("bintray.user")
def bontrayApikey = properties.getProperty("bintray.apikey")

bintray {
	user = bontrayUser
	key = bontrayApikey

	configurations = ['archives']
	pkg {
		repo = 'maven'
		name = 'toolbar-activity'
		desc = desc
		websiteUrl = siteUrl
		issueTrackerUrl = 'https://github.com/CacaoRick/NavigationDrawerActivity/issues'
		vcsUrl = gitUrl
		licenses = ['Apache-2.0']
		publish = true
	}
}

install {
	repositories.mavenInstaller {
		// This generates POM.xml with proper parameters
		pom {
			project {
				packaging 'aar'

				// Add your description here
				name desc
				url siteUrl

				// Set your license
				licenses {
					license {
						name 'The Apache Software License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id 'cacaorick'
						name 'CacaoRick'
						email 'cacaorick@gmail.com'
					}
				}
				scm {
					connection gitUrl
					developerConnection gitUrl
					url siteUrl

				}
			}
		}
	}
}

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task javadoc(type: Javadoc) {
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

javadoc {
	options {
		encoding = 'UTF-8'
		charSet = 'UTF-8'
	}
}

artifacts {
	archives javadocJar
	archives sourcesJar
}